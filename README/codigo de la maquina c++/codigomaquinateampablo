// LIVE SERVER
// Não use este arquivo e o Firebase ao mesmo tempo, cada um é para uma função específica e eles não foram feitos para trabalhar juntos.

#include <Arduino.h>
#include <WiFi.h>

const char* ssid = "SDLG";
const char* password = "123456789";

WiFiServer server(80);
String header;

// Variables de estado
String stateAutomatico = "off";
String stateGarra = "off";
String stateInicio = "off";
String stateCentro = "off";
String stateFinal = "off";
String statePrensa = "off";
String stateZ0 = "off";
String stateZ1 = "off";

// Estados de sensores
String entradaSensorGarra = "off";
String entradaSensorMetalico = "off";
String entradaSensorFinal = "off";
String entradaSensorOptico2 = "off";
String entradaSensorMedidorMeio = "off";
String entradaSensorMedidorFinal = "off";
String entradaSensorMagazine = "off";

// Entradas (nomes e GPIOs)
#define ENTRADA_VP 36  // ED0 - SENSOR DE INICIO /  sensor inicial para iniciar
#define ENTRADA_VN 39  // ED1 - SENSOR METALICO DE PEÇAS /  detector metalico
#define ENTRADA_D34 34 // ED2 - SENSOR FINAL /  para cerrar la nose
#define ENTRADA_D32 32 // ED3 - SENSOR OPTICO / frente al metalico (sensor metalico)
#define ENTRADA_D33 33 // ED4 -  
#define ENTRADA_D25 25 // ED5 - MAGAZINE /  para voltear la pieza --- descartar 
#define ENTRADA_D26 26 // ED6 -
#define ENTRADA_D27 27 // ED7 -

// Saídas correspondentes
#define SAIDA_D23 23 // SD0 - TRAVA/PINO /  pausa                               -------------
#define SAIDA_D22 22 // SD1 - ESTEIRA / la cinta transportadora                 -------------
#define SAIDA_D21 21 // SD2 - SEPARADOR / la salida o entrada final             -------------
#define SAIDA_D19 19 // SD3 - coso para atrapar                                 -------------
#define SAIDA_D18 18 // SD4 - MEDIDOR / controlador de la posicion de la pieza  ------------- descartar
#define SAIDA_TX2 17 // SD5 - nada
#define SAIDA_RX2 16 // SD6 - nada
#define SAIDA_D4 4   // SD7 - nada

unsigned long currentTime = millis();
unsigned long previousTime = 0;
const long timeoutTime = 2000;

void setup() {
  pinMode(ENTRADA_VP, INPUT);
  pinMode(ENTRADA_VN, INPUT);
  pinMode(ENTRADA_D34, INPUT);
  pinMode(ENTRADA_D32, INPUT);
  pinMode(ENTRADA_D33, INPUT);
  pinMode(ENTRADA_D25, INPUT);
  pinMode(ENTRADA_D26, INPUT);
  pinMode(ENTRADA_D27, INPUT);

  pinMode(SAIDA_D23, OUTPUT);
  pinMode(SAIDA_D22, OUTPUT);
  pinMode(SAIDA_D21, OUTPUT);
  pinMode(SAIDA_D19, OUTPUT);
  pinMode(SAIDA_D18, OUTPUT);
  pinMode(SAIDA_TX2, OUTPUT);
  pinMode(SAIDA_RX2, OUTPUT);
  pinMode(SAIDA_D4, OUTPUT);

  digitalWrite(ENTRADA_VP, LOW);
  digitalWrite(ENTRADA_VN, LOW);
  digitalWrite(ENTRADA_D34, LOW);
  digitalWrite(ENTRADA_D33, LOW);
  digitalWrite(ENTRADA_D32, LOW);
  digitalWrite(ENTRADA_D27, LOW);
  digitalWrite(ENTRADA_D26, LOW);
  digitalWrite(ENTRADA_D25, LOW);

  digitalWrite(SAIDA_TX2, LOW);
  digitalWrite(SAIDA_RX2, LOW);
  digitalWrite(SAIDA_D4, LOW);
  digitalWrite(SAIDA_D23, LOW);
  digitalWrite(SAIDA_D22, LOW);
  digitalWrite(SAIDA_D21, LOW);
  digitalWrite(SAIDA_D19, LOW);
  digitalWrite(SAIDA_D18, LOW);

  Serial.begin(9600);
  WiFi.softAP(ssid, password);
  Serial.println("");
  Serial.println("IP address: ");
  Serial.println(WiFi.softAPIP());
  server.begin();
}

void plastico(){
                    digitalWrite(SAIDA_D19, HIGH);
                    delay(1000);
                    digitalWrite(SAIDA_D23, HIGH);

                                        delay(3000);
                                            digitalWrite(SAIDA_D22, LOW);
                                            digitalWrite(SAIDA_D23, LOW);
                                            digitalWrite(SAIDA_D19, LOW);

}
void metalico(){
                    
                    digitalWrite(SAIDA_D21, HIGH);
                    delay(1000);
                    digitalWrite(SAIDA_D19, HIGH);
                    delay(1000);
                    digitalWrite(SAIDA_D23, HIGH);

                                        delay(3000);
                                            digitalWrite(SAIDA_D22, LOW);
                                            digitalWrite(SAIDA_D23, LOW);
                                            digitalWrite(SAIDA_D19, LOW);
                                           digitalWrite(SAIDA_D21, LOW);

}

void modoAutomatico() {
  if(digitalRead(ENTRADA_VP) == HIGH) {
    delay(6000);
    digitalWrite(SAIDA_D22, HIGH);
//1 si es metal XXXXX
    delay(6000);

    if(digitalRead(ENTRADA_VN) == HIGH) {
        metalico();
    }
//2 si es plastico BUENARDO
    if(digitalRead(ENTRADA_VN) == LOW) {
        plastico();
    }
  }
}


void loop() {
  if(stateAutomatico == "on") {
    modoAutomatico();
  }

  WiFiClient client = server.available();
  
  if (client) {
    currentTime = millis();
    previousTime = currentTime;
    Serial.println("New Client.");
    String currentLine = "";
    
    while (client.connected() && currentTime - previousTime <= timeoutTime) {
      currentTime = millis();
      
      if (client.available()) {
        char c = client.read();
        Serial.write(c);
        header += c;
        
        if (c == '\n') {
          if (currentLine.length() == 0) {
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println("Connection: close");
            client.println();

            // Control de salidas
            if (header.indexOf("GET /17/on") >= 0) {
              stateGarra = "on";
              digitalWrite(SAIDA_TX2, HIGH);
            } else if (header.indexOf("GET /17/off") >= 0) {
              stateGarra = "off";
              digitalWrite(SAIDA_TX2, LOW);
            }
           
            if (header.indexOf("GET /23/on") >= 0) {
              stateInicio = "on";
              digitalWrite(SAIDA_D23, HIGH);
            } else if (header.indexOf("GET /23/off") >= 0) {
              stateInicio = "off";
              digitalWrite(SAIDA_D23, LOW);
            }
            
            if (header.indexOf("GET /19/on") >= 0) {
              stateCentro = "on";
              digitalWrite(SAIDA_D19, HIGH);
            } else if (header.indexOf("GET /19/off") >= 0) {
              stateCentro = "off";
              digitalWrite(SAIDA_D19, LOW);
            }
            
            if (header.indexOf("GET /18/on") >= 0) {
              stateFinal = "on";
              digitalWrite(SAIDA_D18, HIGH);
            } else if (header.indexOf("GET /18/off") >= 0) {
              stateFinal = "off";
              digitalWrite(SAIDA_D18, LOW);
            }
            
            if (header.indexOf("GET /22/on") >= 0) {
              statePrensa = "on";
              digitalWrite(SAIDA_D22, HIGH);
            } else if (header.indexOf("GET /22/off") >= 0) {
              statePrensa = "off";
              digitalWrite(SAIDA_D22, LOW);
            }

            if (header.indexOf("GET /21/on") >= 0) {
              stateZ0 = "on";
              digitalWrite(SAIDA_D21, HIGH);
            } else if (header.indexOf("GET /21/off") >= 0) {
              stateZ0 = "off";
              digitalWrite(SAIDA_D21, LOW);
            }
            
            if (header.indexOf("GET /16/on") >= 0) {
              stateZ1 = "on";
              digitalWrite(SAIDA_RX2, HIGH);
            } else if (header.indexOf("GET /16/off") >= 0) {
              stateZ1 = "off";
              digitalWrite(SAIDA_RX2, LOW);
            }

            if (header.indexOf("GET /on") >= 0) {
              stateAutomatico = "on";
            } else if (header.indexOf("GET /off") >= 0) {
              stateAutomatico = "off";
            }

            // Actualizar estados de sensores
            entradaSensorGarra = (digitalRead(ENTRADA_VP) == HIGH) ? "on" : "off";
            entradaSensorMetalico = (digitalRead(ENTRADA_VN) == HIGH) ? "on" : "off";
            entradaSensorMedidorFinal = (digitalRead(ENTRADA_D25) == HIGH) ? "on" : "off";
            entradaSensorMedidorMeio = (digitalRead(ENTRADA_D33) == HIGH) ? "on" : "off";
            entradaSensorMagazine = (digitalRead(ENTRADA_D26) == HIGH) ? "on" : "off";
            entradaSensorFinal = (digitalRead(ENTRADA_D34) == HIGH) ? "on" : "off";
            entradaSensorOptico2 = (digitalRead(ENTRADA_D32) == HIGH) ? "on" : "off";

            // Generar página HTML con CSS integrado
            client.println("<!DOCTYPE html><html>");
            client.println("<head><meta name=\"viewport\" content=\"width=device-width initial-scale=1\">");
            client.println("<title>Controle Industrial</title>");
            client.println("<link rel=\"icon\" href=\"data:\">");
                    client.println("<style>");
                    client.println(":root {");
                    client.println("  --primary: #0ff0fc;");
                    client.println("  --secondary: #ff2a6d;");
                    client.println("  --on-color: #00ff9d;");
                    client.println("  --off-color: #555;");
                    client.println("  --center-on: #ffd300;");
                    client.println("  --text-light: #f5f5f5;");
                    client.println("  --panel-bg: rgba(10, 10, 30, 0.8);");
                    client.println("  --bg-color: #050520;");
                    client.println("  --divider: #3a3a5a;");
                    client.println("  --counter: #bd00ff;");
                    client.println("  --neon-glow: 0 0 10px, 0 0 20px, 0 0 30px;");
                    client.println("}");
                    client.println("* {");
                    client.println("  box-sizing: border-box;");
                    client.println("  -webkit-tap-highlight-color: transparent;");
                    client.println("}");
                    client.println("body {");
                    client.println("  font-family: 'Arial', sans-serif;");
                    client.println("  background-color: var(--bg-color);");
                    client.println("  color: var(--text-light);");
                    client.println("  margin: 0;");
                    client.println("  padding: 10px;");
                    client.println("  text-align: center;");
                    client.println("  background-image:");
                    client.println("    radial-gradient(circle at 10% 20%, rgba(255, 42, 109, 0.1) 0%, transparent 20%),");
                    client.println("    radial-gradient(circle at 90% 80%, rgba(0, 255, 157, 0.1) 0%, transparent 20%),");
                    client.println("    radial-gradient(circle at 50% 50%, rgba(11, 240, 252, 0.1) 0%, transparent 30%);");
                    client.println("  animation: bgPulse 15s infinite alternate;");
                    client.println("  touch-action: manipulation;");
                    client.println("  overflow-x: hidden;");
                    client.println("}");
                    client.println("@keyframes bgPulse {");
                    client.println("  0% { background-color: #050520; }");
                    client.println("  25% { background-color: #0a0a30; }");
                    client.println("  50% { background-color: #050535; }");
                    client.println("  75% { background-color: #0a0a30; }");
                    client.println("  100% { background-color: #050520; }");
                    client.println("}");
                    client.println("h1 {");
                    client.println("  color: var(--primary);");
                    client.println("  font-size: 1.8rem;");
                    client.println("  margin: 10px 0;");
                    client.println("  text-shadow: 0 0 5px var(--primary), 0 0 15px var(--primary);");
                    client.println("  animation: titleGlow 3s infinite alternate;");
                    client.println("}");
                    client.println("@keyframes titleGlow {");
                    client.println("  from { text-shadow: 0 0 5px var(--primary), 0 0 10px var(--primary); }");
                    client.println("  to { text-shadow: 0 0 10px var(--primary), 0 0 20px var(--primary), 0 0 30px var(--primary); }");
                    client.println("}");
                    client.println(".control-panel {");
                    client.println("  background-color: var(--panel-bg);");
                    client.println("  border-radius: 10px;");
                    client.println("  padding: 15px;");
                    client.println("  margin: 10px auto;");
                    client.println("  max-width: 100%;");
                    client.println("  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);");
                    client.println("  border: 1px solid rgba(100, 100, 255, 0.2);");
                    client.println("  backdrop-filter: blur(5px);");
                    client.println("}");
                    client.println(".section-title {");
                    client.println("  color: var(--primary);");
                    client.println("  margin: 15px 0 10px;");
                    client.println("  font-size: 1.1rem;");
                    client.println("  font-weight: bold;");
                    client.println("  text-shadow: 0 0 3px var(--primary);");
                    client.println("}");
                    client.println(".btn {");
                    client.println("  border: none;");
                    client.println("  color: white;");
                    client.println("  padding: 12px 20px;");
                    client.println("  margin: 6px;");
                    client.println("  border-radius: 6px;");
                    client.println("  font-size: 0.95rem;");
                    client.println("  cursor: pointer;");
                    client.println("  transition: all 0.2s;");
                    client.println("  width: 100%;");
                    client.println("  max-width: 280px;");
                    client.println("  font-weight: bold;");
                    client.println("  position: relative;");
                    client.println("  overflow: hidden;");
                    client.println("  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);");
                    client.println("  -webkit-user-select: none;");
                    client.println("  user-select: none;");
                    client.println("}");
                    client.println(".btn:active {");
                    client.println("  transform: scale(0.98);");
                    client.println("}");
                    client.println(".btn-on {");
                    client.println("  background-color: var(--on-color);");
                    client.println("  color: #111;");
                    client.println("}");
                    client.println(".btn-off {");
                    client.println("  background-color: var(--off-color);");
                    client.println("}");
                    client.println(".btn-center-on {");
                    client.println("  background-color: var(--center-on);");
                    client.println("  color: #202124;");
                    client.println("}");
                    client.println(".input-container {");
                    client.println("  display: flex;");
                    client.println("  flex-direction: column;");
                    client.println("  align-items: center;");
                    client.println("  margin: 10px 0;");
                    client.println("}");
                    client.println(".input-label {");
                    client.println("  font-size: 0.9rem;");
                    client.println("  margin-bottom: 5px;");
                    client.println("  color: #BDBDBD;");
                    client.println("}");
                    client.println(".divider {");
                    client.println("  height: 1px;");
                    client.println("  background: linear-gradient(to right, transparent, var(--divider), transparent);");
                    client.println("  margin: 15px 0;");
                    client.println("  border: none;");
                    client.println("}");
                    client.println("@media (max-width: 600px) {");
                    client.println("  body {");
                    client.println("    padding: 5px;");
                    client.println("    font-size: 14px;");
                    client.println("  }");
                    client.println("  h1 {");
                    client.println("    font-size: 1.5rem;");
                    client.println("  }");
                    client.println("  .btn {");
                    client.println("    padding: 10px 15px;");
                    client.println("    font-size: 0.85rem;");
                    client.println("    margin: 4px;");
                    client.println("  }");
                    client.println("  .section-title {");
                    client.println("    font-size: 1rem;");
                    client.println("  }");
                    client.println("}");
                    client.println("</style>");
            client.println("</head>");
            client.println("<body>");
            client.println("<h1>Controle Industrial</h1>");
            client.println("<div class=\"control-panel\">");

            // Sección Modo Automático
            client.println("<div class=\"section-title\">Modo Automatico</div>");
            client.println("<div class=\"input-container\">");
            if (stateAutomatico == "on") {
              client.println("<a href=\"/off\"><button class=\"btn btn-on\">AUTOMATICO LIGADO</button></a>");
            } else {
              client.println("<a href=\"/on\"><button class=\"btn btn-off\">AUTOMATICO DESLIGADO</button></a>");
            }
            client.println("</div>");
            client.println("<div class=\"divider\"></div>");

            // Sección Atuadores
            client.println("<div class=\"section-title\">Atuadores</div>");
            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Garra</div>");
            if (stateGarra == "on") {
              client.println("<a href=\"/17/off\"><button class=\"btn btn-on\">LIGADO</button></a>");
            } else {
              client.println("<a href=\"/17/on\"><button class=\"btn btn-off\">DESLIGADO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Inicio</div>");
            if (stateInicio == "on") {
              client.println("<a href=\"/23/off\"><button class=\"btn btn-on\">LIGADO</button></a>");
            } else {
              client.println("<a href=\"/23/on\"><button class=\"btn btn-off\">DESLIGADO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Centro</div>");
            if (stateCentro == "on") {
              client.println("<a href=\"/19/off\"><button class=\"btn btn-center-on\">LIGADO</button></a>");
            } else {
              client.println("<a href=\"/19/on\"><button class=\"btn btn-off\">DESLIGADO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Final</div>");
            if (stateFinal == "on") {
              client.println("<a href=\"/18/off\"><button class=\"btn btn-on\">LIGADO</button></a>");
            } else {
              client.println("<a href=\"/18/on\"><button class=\"btn btn-off\">DESLIGADO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Prensa</div>");
            if (statePrensa == "on") {
              client.println("<a href=\"/22/off\"><button class=\"btn btn-on\">LIGADO</button></a>");
            } else {
              client.println("<a href=\"/22/on\"><button class=\"btn btn-off\">DESLIGADO</button></a>");
            }
            client.println("</div>");
            client.println("<div class=\"divider\"></div>");

            // Sección Movimentos
            client.println("<div class=\"section-title\">Movimentos</div>");
            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Movimento Final</div>");
            if (stateZ0 == "on") {
              client.println("<a href=\"/21/off\"><button class=\"btn btn-on\">LIGADO</button></a>");
            } else {
              client.println("<a href=\"/21/on\"><button class=\"btn btn-off\">DESLIGADO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Movimento Inicial</div>");
            if (stateZ1 == "on") {
              client.println("<a href=\"/16/off\"><button class=\"btn btn-on\">LIGADO</button></a>");
            } else {
              client.println("<a href=\"/16/on\"><button class=\"btn btn-off\">DESLIGADO</button></a>");
            }
            client.println("</div>");
            client.println("<div class=\"divider\"></div>");

            // Sección Sensores
            client.println("<div class=\"section-title\">Sensores</div>");
            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Sensor Garra (ED0)</div>");
            if (entradaSensorGarra == "on") {
              client.println("<a href=\"/36/off\"><button class=\"btn btn-on\">ATIVO</button></a>");
            } else {
              client.println("<a href=\"/36/on\"><button class=\"btn btn-off\">INATIVO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Sensor Metalico (ED1)</div>");
            if (entradaSensorMetalico == "on") {
              client.println("<a href=\"/39/off\"><button class=\"btn btn-on\">ATIVO</button></a>");
            } else {
              client.println("<a href=\"/39/on\"><button class=\"btn btn-off\">INATIVO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Sensor Final (ED2)</div>");
            if (entradaSensorFinal == "on") {
              client.println("<a href=\"/34/off\"><button class=\"btn btn-on\">ATIVO</button></a>");
            } else {
              client.println("<a href=\"/34/on\"><button class=\"btn btn-off\">INATIVO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Sensor Optico 2 (ED3)</div>");
            if (entradaSensorOptico2 == "on") {
              client.println("<a href=\"/32/off\"><button class=\"btn btn-on\">ATIVO</button></a>");
            } else {
              client.println("<a href=\"/32/on\"><button class=\"btn btn-off\">INATIVO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Sensor Medidor Meio (ED4)</div>");
            if (entradaSensorMedidorMeio == "on") {
              client.println("<a href=\"/33/off\"><button class=\"btn btn-on\">ATIVO</button></a>");
            } else {
              client.println("<a href=\"/33/on\"><button class=\"btn btn-off\">INATIVO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Sensor Medidor Final (ED5)</div>");
            if (entradaSensorMedidorFinal == "on") {
              client.println("<a href=\"/25/off\"><button class=\"btn btn-on\">ATIVO</button></a>");
            } else {
              client.println("<a href=\"/25/on\"><button class=\"btn btn-off\">INATIVO</button></a>");
            }
            client.println("</div>");

            client.println("<div class=\"input-container\">");
            client.println("<div class=\"input-label\">Sensor Magazine (ED6)</div>");
            if (entradaSensorMagazine == "on") {
              client.println("<a href=\"/26/off\"><button class=\"btn btn-on\">ATIVO</button></a>");
            } else {
              client.println("<a href=\"/26/on\"><button class=\"btn btn-off\">INATIVO</button></a>");
            }
            client.println("</div>");

            client.println("</div>");
            client.println("</body></html>");
            
            client.println();
            break;
          } else {
            currentLine = "";
          }
        } else if (c != '\r') {
          currentLine += c;
        }
      }
    }
    
    header = "";
    client.stop();
    Serial.println("Client disconnected.");
    Serial.println("");
  }
}

